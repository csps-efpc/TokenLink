% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tokenify.R
\name{calc_m_prob}
\alias{calc_m_prob}
\title{Calculates what m_prob should be, takes in a dataframe and returns a vector of same length
this dataframe must have a column of name n_comparisons and it will return a vector. which indicate the m_probs
This is the default calculator for m prob of tokens it can be overwritten by injecting a diferent function into the
m_prob_func parameter into any of tokenize_ations_m_u_prob, or token_links when called.
This function must take a dataframe and return a vector. The dataframe passed in will have columns token, token_type, n.x, n.y, n_comparisons, u_prob}
\usage{
calc_m_prob(
  dat_token_info,
  min_m_prob = 0.99,
  max_m_prob = 0.999,
  log_base = 10,
  ...
)
}
\arguments{
\item{dat_token_info}{a dataframe with information about the tokens}

\item{min_m_prob}{minimum value of m_prob returned}

\item{max_m_prob}{maximum value of m_prob returned}

\item{log_base}{Number. Base of the log. Default 10}

\item{...}{is ignored}
}
\description{
Calculates what m_prob should be, takes in a dataframe and returns a vector of same length
this dataframe must have a column of name n_comparisons and it will return a vector. which indicate the m_probs
This is the default calculator for m prob of tokens it can be overwritten by injecting a diferent function into the
m_prob_func parameter into any of tokenize_ations_m_u_prob, or token_links when called.
This function must take a dataframe and return a vector. The dataframe passed in will have columns token, token_type, n.x, n.y, n_comparisons, u_prob
}
\examples{

dplyr::tibble(n_comparisons = sample.int(100, 10)) |> calc_m_prob()


}
